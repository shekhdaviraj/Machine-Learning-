# -*- coding: utf-8 -*-
"""K-means T-shirt.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y62OghwXW42-mhSra-Jj521wwjnI0sSc
"""

# Commented out IPython magic to ensure Python compatibility.
from sklearn.cluster import KMeans
import pandas as pd
from sklearn.preprocessing import MinMaxScaler
from matplotlib import pyplot as plt
# %matplotlib inline

df = pd.read_csv("TShirt_size.csv")
df.head()

plt.scatter(df.Height,df['Weight'])
plt.xlabel('Height')
plt.ylabel('Weight')

km = KMeans(n_clusters=3)
y_predicted = km.fit_predict(df[['Height','Weight']])
y_predicted

df['cluster']=y_predicted
df.head()

km.cluster_centers_

df1 = df[df.cluster==0]
df2 = df[df.cluster==1]
df3 = df[df.cluster==2]
plt.scatter(df1.Height,df1['Weight'],color='green')
plt.scatter(df2.Height,df2['Weight'],color='red')
plt.scatter(df3.Height,df3['Weight'],color='black')
plt.scatter(km.cluster_centers_[:,0],km.cluster_centers_[:,1],color='purple',marker='*',label='centroid')
plt.xlabel('Height')
plt.ylabel('Weight')
plt.legend()

scaler = MinMaxScaler()

scaler.fit(df[['Weight']])
df['Weight'] = scaler.transform(df[['Weight']])

scaler.fit(df[['Height']])
df['Height'] = scaler.transform(df[['Height']])

df.head()

plt.scatter(df.Height,df['Weight'])

km = KMeans(n_clusters=3)
y_predicted = km.fit_predict(df[['Height','Weight']])
y_predicted

df['cluster']=y_predicted
df.head()

df1 = df[df.cluster==0]
df2 = df[df.cluster==1]
df3 = df[df.cluster==2]
plt.scatter(df1.Height,df1['Weight'],color='green')
plt.scatter(df2.Height,df2['Weight'],color='red')
plt.scatter(df3.Height,df3['Weight'],color='black')
plt.scatter(km.cluster_centers_[:,0],km.cluster_centers_[:,1],color='purple',marker='*',label='centroid')
plt.legend()

sse = []
k_rng = range(1,10)
for k in k_rng:
    km = KMeans(n_clusters=k)
    km.fit(df[['Height','Weight']])
    sse.append(km.inertia_)

plt.xlabel('K')
plt.ylabel('Sum of squared error')
plt.plot(k_rng,sse)